plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
jacoco {
	toolVersion = "0.8.10" // versión de JaCoCo
}

tasks.test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Generar el reporte después de las pruebas
}

jacocoTestReport {
	dependsOn test // Ejecuta las pruebas antes de generar el reporte
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = file("${buildDir}/jacocoHtml")
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//MAPSTRUCT
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	annotationProcessor 'org.projectlombok:lombok', 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	//OPEN API
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//Mockito
	testImplementation 'org.mockito:mockito-core:4.0.0'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'

}

tasks.named('test') {
	useJUnitPlatform()
}
bootJar {
	enabled = true
}